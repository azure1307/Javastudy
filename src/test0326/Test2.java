package test0326;
/*
[결과]
 46
 47  37
 48  38  29
 49  39  30  22
 50  40  31  23  16
 51  41  32  24  17  11
 52  42  33  25  18  12   7
 53  43  34  26  19  13   8   4
 54  44  35  27  20  14   9   5   2
 55  45  36  28  21  15  10   6   3   1
 
 1.1
 2.1 2.2
 3.1 3.2 3.3
 4.1 4.2 4.3 4.4
 ...
 10.1 ~ 10.10
 이건 위에서 아래로, 왼쪽에서 오른쪽으로
 
 문제는 아래에서 위로, 오른쪽에서 왼쪽으로
 i는 10부터 1까지 1감소,
 j는 1부터 i까지 1증가
 10.1, 9.1, 8.1, ... 1.1
 10.2, 9,2, 8,2, ...
 10.3, 9.3, 8.3, ...
 ...
 10.8, 9.8, 8.8
 10.9, 9.9
 10.10
 
 숫자		i	j
 1		9	9 //
 2		8	8
 3		9	8 //
 4		7	7
 5		8	7
 6		9	7 //
 7		6	6
 8		7	6
 9		8	6
 10		9	6 //
 i는 9, 8~9, 7~9, 6~9, ... (j부터 9까지 1씩 증가)
 j는 9반복, 8반복, 7반복, 6반복, ... (9부터 0까지 1씩 감소), j가 바깥쪽
 
 1.가변 배열 선언 int arr[][] = new int[10][]
 2.각행의 1차원 배열 객체 생성 
 3.배열의 내부에 숫자 채우기 (1부터...)
 4.결과 출력 (2차원배열 출력)
*/
public class Test2 {
	public static void main(String[] args) {
		int arr[][] = new int[10][];
		for (int i=0;i<10;i++) {
			arr[i] = new int[i+1];		//1차원 배열의 요소의 갯수 설정
		}
	
		int data = 0;	
		for (int j=arr.length-1;j>=0;j--) { //10번 반복, j는 9부터 0까지 1 감소
			for (int i=j;i<arr.length;i++) { //10번 반복, i는 j부터 행의 갯수까지!!!!. 
					arr[i][j] = ++data;
			}
		}
		
		for (int i=0;i<10;i++) {
			for (int a:arr[i]) {
				System.out.print(a+" ");
			}			
			System.out.println();
		}
	}

}
